// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  avatar    String
  feedbacks Feedback[]
  upvotes   Upvote[]
}

model Feedback {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  category    Category @relation(fields: [category_id], references: [id])
  category_id Int
  status      Status?  @relation(fields: [status_id], references: [id])
  status_id   Int
  author      User     @relation(fields: [author_id], references: [id])
  author_id   Int
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
  upvotes     Upvote[]
}

model Upvote {
  id          Int      @id @default(autoincrement())
  feedback    Feedback @relation(fields: [feedback_id], references: [id])
  feedback_id Int
  user        User     @relation(fields: [user_id], references: [id])
  user_id     Int
  creted_at   DateTime @default(now())

  @@unique([feedback_id, user_id])
}
model Category {
  id        Int        @id @default(autoincrement())
  title     String     @unique
  feedbacks Feedback[]
}

model Status {
  id        Int        @id @default(autoincrement())
  title     String     @unique
  feedbacks Feedback[]
}
